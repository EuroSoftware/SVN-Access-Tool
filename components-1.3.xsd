<?xml version="1.0" encoding="utf-8"?>
<!-- Created with Liquid XML Studio 1.0.8.0 (http://www.liquid-technologies.com) -->
<xs:schema
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  xmlns:tns="http://www.gk-software.com/schema/spring_ext/components/1.3"
  xmlns:tool="http://www.springframework.org/schema/tool"
  targetNamespace="http://www.gk-software.com/schema/spring_ext/components/1.3"
  attributeFormDefault="unqualified" elementFormDefault="qualified"
>
  <xs:annotation>
    <xs:documentation>
    Description of changes:
      1.0 - initial version
      1.1 - added element 'container-interface'
      1.2 - included Spring 'tool' schema annotations for better tooling support,
            'interface' attributes made required
      1.3 - added elements 'extension-point' and 'extension-point-alias'
    </xs:documentation>
  </xs:annotation>

  <xs:import
    namespace="http://www.springframework.org/schema/tool"
    schemaLocation="http://www.springframework.org/schema/tool/spring-tool-3.0.xsd"
  />

  <!-- top level element <component:descriptor> -->
  <xs:element name="descriptor" type="tns:t-component-descriptor">
    <xs:annotation>
      <xs:documentation>element for standalone definition of component descriptor</xs:documentation>
    </xs:annotation>
  </xs:element>

  <!-- top level element <component:instance> -->
  <xs:element name="instance" type="tns:t-component-instance">
    <xs:annotation>
      <xs:documentation>element for standalone definition of component instance</xs:documentation>
    </xs:annotation>
  </xs:element>

  <!-- top level element <component:container-descriptor> -->
  <xs:element name="container-descriptor">
    <xs:annotation>
      <xs:documentation>Root element for component container</xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:complexContent mixed="false">
        <xs:extension base="tns:t-component-container-descriptor" />
      </xs:complexContent>
    </xs:complexType>
  </xs:element>

  <!-- top level element <component:container-interface> -->
  <xs:element name="container-interface" type="tns:t-component-container-interface" />

  <!-- type definitions -->
  <xs:complexType name="t-component-container-descriptor">
    <xs:annotation>
      <xs:appinfo>
        <tool:annotation>
          <tool:exports type="gk.spring_ext.component.descriptor.ComponentContainerDescriptor"/>
        </tool:annotation>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="container-config" type="tns:t-component-config" />
      <xs:element minOccurs="0" maxOccurs="unbounded" name="instance" type="tns:t-component-instance">
        <xs:annotation>
          <xs:documentation>element describing instance of component</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>bean name for component container bean (default is 'componentContainer')</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ref" type="xs:string">
      <xs:annotation>
        <xs:documentation>reference to component container descriptor bean, from which is this descriptor derived (parent component container descriptor)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="resource" type="xs:string">
      <xs:annotation>
        <xs:documentation>optional reference to additional XML resource to load, which contains component container descriptor bean</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="t-component-container-interface">
    <xs:annotation>
      <xs:appinfo>
        <tool:annotation>
          <tool:exports type="gk.spring_ext.component.descriptor.ComponentContainerInterfaceDescriptor"/>
        </tool:annotation>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="export-bean" type="tns:t-component-container-interface-export" />
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>bean id for component container interface</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="t-component-container-interface-export">
    <xs:complexContent mixed="false">
      <xs:extension base="tns:t-abstract-conditional-element">
        <xs:attribute name="name" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>bean name to export from component container</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="interface" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>definition of bean's interface</xs:documentation>
            <xs:appinfo>
              <tool:annotation>
                <tool:expected-type type="java.lang.Class" />
                <tool:assignable-to restriction="interface-only" />
              </tool:annotation>
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="export-name" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>optional definition of bean name under which it should be exported</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="t-component-instance">
    <xs:annotation>
      <xs:documentation>represents one instance of component</xs:documentation>
      <xs:appinfo>
        <tool:annotation>
          <tool:exports type="gk.spring_ext.component.descriptor.ComponentHandle"/>
        </tool:annotation>
      </xs:appinfo>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="tns:t-abstract-conditional-element">
        <xs:sequence>
          <xs:element minOccurs="0" name="descriptor" type="tns:t-component-descriptor">
            <xs:annotation>
              <xs:documentation>description of component's static information (configuration resources and exported beans)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="config">
            <xs:annotation>
              <xs:documentation>list of configuration files (used for placeholders)</xs:documentation>
            </xs:annotation>
            <xs:complexType>
              <xs:complexContent mixed="false">
                <xs:extension base="tns:t-component-config" />
              </xs:complexContent>
            </xs:complexType>
          </xs:element>
          <xs:element minOccurs="0" maxOccurs="1" name="bean-mapping" type="tns:t-component-bean-mapping">
            <xs:annotation>
              <xs:documentation>optional bean mapping for component</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ordering" type="tns:t-component-ordering" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>bean name for component instance/handle</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="name" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>unique identification of component inside of component container</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="ref" type="xs:string">
          <xs:annotation>
            <xs:documentation>reference to component instance bean, from which is this instance derived (parent component instance)</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="resource" type="xs:string" use="optional">
          <xs:annotation>
            <xs:documentation>optional reference to additional XML resource to load, which contains component instance bean</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="t-component-descriptor">
    <xs:annotation>
      <xs:documentation>component descriptor - describes static information about component</xs:documentation>
      <xs:appinfo>
        <tool:annotation>
          <tool:exports type="gk.spring_ext.component.descriptor.ComponentDescriptor"/>
        </tool:annotation>
      </xs:appinfo>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="1" name="description" type="xs:string">
        <xs:annotation>
          <xs:documentation>human readable description of component</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="meta-data" type="tns:t-component-meta-data">
        <xs:annotation>
          <xs:documentation>component's meta data</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="content" type="tns:t-component-content">
        <xs:annotation>
          <xs:documentation>content of component - references to configuratino resource of application context</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="1" name="interface" type="tns:t-component-interface">
        <xs:annotation>
          <xs:documentation>contains list of beans to import/export to/from component</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>bean name for component descriptor (can be used for programmatic start of component)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="ref" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>bean name, which contains component descriptor from which is this descriptor derived (parent component descriptor)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="resource" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>optional reference to additional XML resource to load, which contains component descriptor bean</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="t-component-config">
    <xs:annotation>
      <xs:documentation>config locations of component - used for placeholder resolving</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="property-file">
        <xs:annotation>
          <xs:documentation>Zero or multiple element, which defines particular property files, which should be loaded to configure component. If no config property file is specified, component container tries to load property file &lt;component-id&gt;.properties.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent mixed="false">
            <xs:extension base="tns:t-abstract-conditional-element">
              <xs:attribute name="name" type="xs:string" use="required">
                <xs:annotation>
                  <xs:documentation>name of property file (loaded by config provider)</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>bean name for component descriptor (can be used for programmatic start of component)</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="t-component-content">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="xml-resource">
        <xs:annotation>
          <xs:documentation>description of one XML bean definition resource (optional prefix from element 'config' will be used for constructing of full resource location)</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent mixed="false">
            <xs:extension base="tns:t-abstract-conditional-element">
              <xs:attribute name="location" type="xs:string" use="optional">
                <xs:annotation>
                  <xs:documentation>location of config resource</xs:documentation>
                </xs:annotation>
              </xs:attribute>
              <xs:attribute name="location-absolute" type="xs:string" use="optional">
                <xs:annotation>
                  <xs:documentation>absolute location of config resource (deprecated, because absolute locations are auto detected)</xs:documentation>
                </xs:annotation>
              </xs:attribute>
            </xs:extension>
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="location-prefix" type="xs:string" use="optional" />
  </xs:complexType>

  <xs:complexType name="t-component-interface">
    <xs:annotation>
      <xs:documentation>import and export interface of component</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="import-bean">
        <xs:annotation>
          <xs:documentation>definition of bean import</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent mixed="false">
            <xs:extension base="tns:t-interface-bean" />
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="export-bean">
        <xs:annotation>
          <xs:documentation>definition of bean export</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent mixed="false">
            <xs:extension base="tns:t-interface-bean" />
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="extension-point">
        <xs:annotation>
          <xs:documentation>definition of extension points</xs:documentation>
        </xs:annotation>
        <xs:complexType>
          <xs:complexContent mixed="false">
            <xs:extension base="tns:t-interface-bean" />
          </xs:complexContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="t-component-bean-mapping">
    <xs:sequence>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="import-bean-alias" type="tns:t-bean-alias">
        <xs:annotation>
          <xs:documentation>allows to map imported bean names to internal names</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="export-bean-alias" type="tns:t-bean-alias">
        <xs:annotation>
          <xs:documentation>allows to override bean names, for exporting to parent application context</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" maxOccurs="unbounded" name="extension-point-alias" type="tns:t-bean-alias">
        <xs:annotation>
          <xs:documentation>allows to map bean names used as extension points to internal names</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>bean id of component bean mapping</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="t-bean-alias">
    <xs:attribute name="internal-name" type="xs:string" use="required" />
    <xs:attribute name="external-name" type="xs:string" use="required" />
  </xs:complexType>

  <xs:complexType name="t-interface-bean">
    <xs:annotation>
      <xs:documentation>type used for import/export of beans</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="tns:t-abstract-conditional-element">
        <xs:attribute name="name" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>import/export bean name</xs:documentation>
          </xs:annotation>
        </xs:attribute>
        <xs:attribute name="interface" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>interface of bean</xs:documentation>
            <xs:appinfo>
              <tool:annotation>
                <tool:expected-type type="java.lang.Class"/>
                <tool:assignable-to restriction="interface-only" />
              </tool:annotation>
            </xs:appinfo>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="t-component-ordering">
    <xs:annotation>
      <xs:documentation>type used to define startup order of components</xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element minOccurs="0" name="place" type="tns:t-component-ordering-place">
        <xs:annotation>
          <xs:documentation>descriptor of startup ordering related to other components</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>bean name of ordering entry descriptor</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="t-component-ordering-place">
    <xs:annotation>
      <xs:documentation>type used as descriptor of startup ordering related to other components</xs:documentation>
    </xs:annotation>
    <xs:complexContent mixed="false">
      <xs:extension base="tns:t-abstract-conditional-element">
        <xs:attribute name="after" type="xs:string" use="required">
          <xs:annotation>
            <xs:documentation>reference to component ID which should be started before this component</xs:documentation>
          </xs:annotation>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>

  <xs:complexType name="t-abstract-conditional-element">
    <xs:annotation>
      <xs:documentation>abstract type for all conditional elements</xs:documentation>
    </xs:annotation>
    <xs:attribute name="if" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>optional condition value if component should be started</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="unless" type="xs:string" use="optional">
      <xs:annotation>
        <xs:documentation>optional condition value if component should not be started</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute default="true" name="equals" type="xs:string">
      <xs:annotation>
        <xs:documentation>value, which must (in case of if) or may not (in case of unless) match to fulfill the condition</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>

  <xs:complexType name="t-component-meta-data">
    <xs:annotation>
      <xs:documentation>describes component's meta data</xs:documentation>
    </xs:annotation>
    <xs:attribute name="key" type="xs:string" use="required" />
    <xs:attribute name="value" type="xs:string" />
  </xs:complexType>

</xs:schema>
